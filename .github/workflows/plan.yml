name: plan

on:
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.29
      - name: Create tfvars
        run: echo "${{ secrets.TFVARS }}" > terraform/github/vars.tfvars
      - name: Terraform Format
        run: make format
      - name: Terraform init
        run: make remote-enable
      - name: Terraform plan
        run: make plan-ci
      - name: Cat plan.txt
        id: plan
        run: |
          cat terraform/github/plan.txt
          sed -i -z 's/\n/\\n/g' terraform/github/plan.txt
          sed -i -z 's/\"/\\"/g' terraform/github/plan.txt
      - name: PR Comment
        uses: actions/github-script@v3.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          URL: ${{ github.event.pull_request.comments_url }}
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          script: |
            const output = `## \`${{ matrix.dir }}\`
            #### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
