name: plan

on:
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.29
      - name: Create tfvars
        run: echo "${{ secrets.TFVARS }}" > terraform/github/vars.tfvars
      - name: Terraform Format
        run: make format
      - name: Terraform init
        run: make remote-enable
      - name: Terraform plan
        id: plan
        run: make plan-ci
      - uses: actions/github-script@v1
        if: ${{ !contains(steps.plan.outputs.stdout, 'No changes.') }}
        env:
          STDOUT: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const lines = process.env.STDOUT.split('\n')
            const separator = '-'.repeat(72)
            let index = lines.indexOf(separator)
            let outputLines = lines.slice(index + 1)
            index = outputLines.indexOf(separator)
            if (index) {
              outputLines = outputLines.slice(0, index)
            }
            const planOutput = '```' + outputLines.join('\n') + '```'
            const output = `<details><summary>terraform plan:</summary>\n\n${planOutput}\n\n</details>`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
